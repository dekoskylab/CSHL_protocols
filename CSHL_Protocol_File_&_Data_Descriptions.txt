#File/Script	Description
	1. annotation_job_names.txt	This tab-separated text file must be assembled by the user. It contains the experiment descriptions in Column 1, and the name of each file to be processed in Column 2.

	2. annotation_script_v1.0.sh	This bash script tracks and quantifies CDR-H3 amino acid sequences across antigen sort rounds, compiling the data into a user-friendly functional database. It computes the prevalence and enrichment ratio of each CDR-H3 in database compared to a reference library for each unique sequence across a sorting campaign. The script then prints the results into a tab-separated text file containing all unique CDR-H3 amino acid sequences, along with their corespondent prevalence and enrichment ratios as described in Part2_A. 

	3. Exp_name_report.txt 		This tab-separated file contains the results of the enrichment calculation scripts discussed in (2). The file can be directly imported to an Excel sheet for visualization and manual inspection & analysis.

#Part_2B: Determining mutational functional impacts in a synthetic gene library
	1. MiSeq_analysis_v3.py	This python script extract the column containing nucleotide sequence of the variable region of heavy or light chain genes from the IgBlast output file generated in Step 1 and writes to a separate file labelled with suffix *VDJaa.txt_ff. Each VDJaa.txt_ff generated is further split into 100,000 lines for further processing by jobsubmit.py script. It uses two auxiliary scripts to transform the tabular data into fasta file and to translate the nucleotide sequence into an amino acid sequence.

	2. jobsubmit.py	Trims amino acid sequences of the variable heavy and light chain genes provided in the VDJaa.txt file. 

	3. sorting.py	This python script removes the sequences containing stop codons. It uses usearch to compare the template sequence (provided by query_aa.fasta file) against the trimmed and filtered sequences. The *user_out-AA file generated by this script contains information on the sequences along with their raw count that have the defined percentage identify specified in usearch command in the script. 

	4. aa_comparison_v3.py	Processes the *user_out-AA file to generate a report on the position of mutation wrt the template amino acid sequence numbered from one onward. The output of file generated by this script is labelled as *result_aa-comp.txt
	
#Part_2B:  Sample data files
	File_Name	NCBI_SRA_Experiment_#
	Part_2B_R1_1_S1	SRX9515493
	Part_2B_R1_2_S2	SRX9515494
	Part_2B_R1_3_S3	SRX9515495
	Part_2B_R1_4_S4	SRX9515496
	Part_2B_R1_5_S5	SRX9515497
	Part_2B_R1_6_S6	SRX9515498
	Part_2B_R2_1_S11	SRX9515467
	Part_2B_R2_2_S12	SRX9515468
	Part_2B_R2_3_S13	SRX9515469
	Part_2B_R2_4_S14	SRX9515470
	Part_2B_R2_5_S15	SRX9515472
	Part_2B_R2_6_S16	SRX9515473
	Part_2B_R3_1_S1	SRX9515480
	Part_2B_R3_2_S2	SRX9515481
	Part_2B_R3_3_S3	SRX9515483
	Part_2B_R3_4_S4	SRX9515484
	Part_2B_R3_5_S5	SRX9515485
	Part_2B_R3_6_S6	SRX9515486
	Part_2B_VH_NNK-VL-pos	SRX9515471
